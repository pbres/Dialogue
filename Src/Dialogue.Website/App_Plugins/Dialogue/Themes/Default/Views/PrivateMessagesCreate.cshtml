@using Dialogue.Logic.Application
@model Dialogue.Logic.Models.ViewModels.PageCreatePrivateMessageViewModel

@{
    Layout = "TwoCol.cshtml";
}

@section PageTitle {
    @Model.PageTitle
}

<div class="btn-group pm-buttons">
    <a href="@Urls.GenerateUrl(Urls.UrlType.MessageInbox)" class="btn btn-default">@Html.Lang("PM.PrivateMessages")</a>
    <a href="@Urls.GenerateUrl(Urls.UrlType.MessageOutbox)" class="btn btn-default">@Html.Lang("PM.SentPrivateMessages")</a>
</div>

@using (Html.BeginForm("Create", "DialogueMessageSurface", FormMethod.Post, new { @class = "form", role = "form" }))
{
    @Html.ValidationSummary(false)
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.HiddenFor(m => m.CreatePrivateMessageViewModel.UserId)
        @Html.LabelFor(m => m.CreatePrivateMessageViewModel.UserToUsername)
        @Html.TextBoxFor(m => m.CreatePrivateMessageViewModel.UserToUsername, new {@class = "form-control usertotextbox", @readonly = "readonly"})
        @Html.ValidationMessageFor(m => m.CreatePrivateMessageViewModel.UserToUsername)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.CreatePrivateMessageViewModel.Subject)
        @Html.TextBoxFor(m => m.CreatePrivateMessageViewModel.Subject, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.CreatePrivateMessageViewModel.Subject)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.CreatePrivateMessageViewModel.Message)
        @Html.EditorFor(m => m.CreatePrivateMessageViewModel.Message)
        @Html.ValidationMessageFor(m => m.CreatePrivateMessageViewModel.Message)
    </div>


    <div class="submit-holder">
        <input type="submit" class="btn btn-large btn-success" value="@Html.Lang("PM.Send")" />
    </div>

}

@if (!string.IsNullOrEmpty(Model.CreatePrivateMessageViewModel.PreviousMessage))
{
    <div class="previousmessageholder">
        <p class="originalmessage">@Html.Lang("PM.OriginalMessage")</p>
        @Html.Raw(AppHelpers.ConvertPostContent(Model.CreatePrivateMessageViewModel.PreviousMessage))
    </div>
}